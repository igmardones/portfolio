---
interface ProjectCardProps {
  imageUrl: string;
  title: string;
  description: string;
  buttonText: string;
  technologies: string[];
}

const { imageUrl, title, description, buttonText, technologies } =
  Astro.props as ProjectCardProps;
---

<div
  class="relative flex w-78 flex-col rounded-xl bg-zinc-900 bg-clip-border text-white shadow-md mb-4"
>
  <div
    class="relative mx-4 -mt-6 h-40 overflow-hidden rounded-xl bg-clip-border shadow-lg"
  >
    <img
      src={imageUrl}
      alt={title}
      class="h-full w-full object-cover transition-transform duration-300 ease-in-out transform hover:scale-105 hover:brightness-75"
    />
  </div>
  <div class="p-6">
    <h5
      class="mb-2 block font-sans text-xl font-semibold leading-snug tracking-normal text-blue-gray-900 antialiased"
    >
      {title}
    </h5>
    <p
      class="block font-sans text-base font-light leading-relaxed text-inherit antialiased"
    >
      {description}
    </p>

    <!-- Mostrar los badges de tecnologÃ­as -->
    <div class="mt-4 flex flex-wrap gap-2">
      {
        technologies.map((tech) => (
          <span class="inline-flex items-center rounded-md bg-blue-50 px-2 py-1 text-xs font-medium text-blue-700 ring-1 ring-inset ring-gray-500/10">
            {tech}
          </span>
        ))
      }
    </div>
  </div>
  <div class="p-6 pt-0">
    <button
      type="button"
      class="select-none rounded-lg bg-blue-500 py-3 px-6 text-center align-middle font-sans text-xs font-bold uppercase text-white shadow-md transition-all hover:shadow-lg focus:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50"
    >
      {buttonText}
    </button>
  </div>
</div>
